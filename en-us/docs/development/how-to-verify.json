{
  "filename": "how-to-verify.md",
  "__html": "<h1>验证候选版本</h1>\n<p><font color=\"#dd0000\" size=\"4\">TODO: This page needs to be translated into English. If you are interested, just do it.</font></p>\n<p>详细的检查列表请参考: <a href=\"https://cwiki.apache.org/confluence/display/INCUBATOR/Incubator+Release+Checklist\">check list</a></p>\n<h2>1. 下载要发布的候选版本到本地环境</h2>\n<pre><code class=\"language-shell\">svn co https://dist.apache.org/repos/dist/dev/incubator/tubemq/${release_version}-${rc_version}/\n</code></pre>\n<h2>2. 验证上传的版本是否合规</h2>\n<blockquote>\n<p>开始验证环节，验证包含但不局限于以下内容和形式</p>\n</blockquote>\n<h3>2.1 查看发布包是否完整</h3>\n<blockquote>\n<p>上传到dist的包必须包含源码包，二进制包可选</p>\n</blockquote>\n<ol>\n<li>是否包含源码包</li>\n<li>是否包含源码包的签名</li>\n<li>是否包含源码包的sha512</li>\n<li>是否包含源码包的md5</li>\n<li>如果上传了二进制包，则同样检查(2)-(4)所列的内容</li>\n</ol>\n<h3>2.2 检查gpg签名</h3>\n<ul>\n<li>导入公钥</li>\n</ul>\n<pre><code class=\"language-shell\">curl https://dist.apache.org/repos/dist/dev/tubemq/KEYS &gt;&gt; KEYS # 下载KEYS\ngpg --import KEYS # 导入KEYS到本地\n</code></pre>\n<ul>\n<li>使用如下命令检查签名</li>\n</ul>\n<pre><code class=\"language-shell\">for i in *.tar.gz; do echo $i; gpg --verify $i.asc $i ; done\n<span class=\"hljs-meta\">#</span><span class=\"bash\">或者</span>\ngpg --verify apache-tubemq-${release_version}-src.tar.gz.asc apache-tubemq-${release_version}-src.tar.gz\n<span class=\"hljs-meta\">#</span><span class=\"bash\"> 如果上传二进制包，则同样需要检查二进制包的签名是否正确</span>\ngpg --verify apache-tubemq-server-${release_version}-bin.tar.gz.asc apache-tubemq-server-${release_version}-bin.tar.gz\ngpg --verify apache-tubemq-client-${release_version}-bin.tar.gz.asc apache-tubemq-client-${release_version}-bin.tar.gz\n</code></pre>\n<ul>\n<li>检查结果\n出现类似以下内容则说明签名正确，关键字：<code>Good signature</code></li>\n</ul>\n<pre><code class=\"language-shell\">apache-tubemq-0.3.0-incubating-src.tar.gz\ngpg: Signature made Sat May 30 11:45:01 2020 CST\ngpg:                using RSA key 9B12C2228BDFF4F4CFE849445EF3A66D57EC647A\ngpg: Good signature from \"Guangxu Cheng &lt;gxcheng@apache.org&gt;\" [ultimate]gular2\n</code></pre>\n<h3>2.3 检查sha512哈希</h3>\n<blockquote>\n<p>本地计算sha512哈希后，验证是否与dist上的一致</p>\n</blockquote>\n<pre><code class=\"language-shell\">for i in *.tar.gz; do echo $i; gpg --print-md SHA512 $i; done\n<span class=\"hljs-meta\">#</span><span class=\"bash\">或者</span>\ngpg --print-md SHA512 apache-tubemq-${release_version}-src.tar.gz\n<span class=\"hljs-meta\">#</span><span class=\"bash\"> 如果上传二进制包，则同样需要检查二进制包的sha512哈希</span>\ngpg --print-md SHA512 apache-tubemq-server-${release_version}-bin.tar.gz\ngpg --print-md SHA512 apache-tubemq-client-${release_version}-bin.tar.gz\n<span class=\"hljs-meta\">#</span><span class=\"bash\"> 或者</span>\nfor i in *.tar.gz.sha512; do echo $i; sha512sum -c $i; done\n</code></pre>\n<h4>2.4 检查MD5</h4>\n<blockquote>\n<p>本地计算MD5后，验证是否与dist上的一致</p>\n</blockquote>\n<pre><code class=\"language-shell\">for i in *.tar.gz; do echo $i; gpg --print-md MD5 $i; done\n<span class=\"hljs-meta\">#</span><span class=\"bash\">或者</span>\ngpg --print-md MD5 apache-tubemq-${release_version}-src.tar.gz\n<span class=\"hljs-meta\">#</span><span class=\"bash\"> 如果上传二进制包，则同样需要检查二进制包的MD5</span>\ngpg --print-md MD5 apache-tubemq-server-${release_version}-bin.tar.gz\ngpg --print-md MD5 apache-tubemq-client-${release_version}-bin.tar.gz\n</code></pre>\n<h3>2.5. 检查源码包的文件内容</h3>\n<p>解压缩<code>apache-tubemq-${release_version}-src.tar.gz</code>，进行如下检查:</p>\n<ul>\n<li>DISCLAIMER文件是否存在及内容是否正确</li>\n<li>LICENSE and NOTICE文件是否存在及内容是否正确</li>\n<li>所有文件是否带有ASF License头</li>\n<li>源码是否能够正常编译</li>\n<li>单测是否能够跑通</li>\n<li>....</li>\n</ul>\n<h3>2.6 检查二进制包(如果上传了二进制包)</h3>\n<p>解压缩<code>apache-tubemq-client-${release_version}-src.tar.gz</code>和<code>apache-tubemq-server-${release_version}-src.tar.gz</code>，进行如下检查:</p>\n<ul>\n<li>DISCLAIMER文件是否存在及内容是否正确</li>\n<li>LICENSE and NOTICE文件是否存在及内容是否正确</li>\n<li>能否正常部署成功</li>\n<li>部署测试环境、验证生产消费能否正常运行</li>\n<li>验证你认为可能会出问题的地方</li>\n<li>....</li>\n</ul>\n",
  "link": "/en-us/docs/development/how-to-verify.html",
  "meta": {}
}