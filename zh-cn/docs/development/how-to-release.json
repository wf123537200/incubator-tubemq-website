{
  "filename": "how-to-release.md",
  "__html": "<h1>如何发布版本</h1>\n<blockquote>\n<p>本文主要介绍了Release Manager如何按照Apache的流程发布版本，</p>\n</blockquote>\n<h2>0. 前言</h2>\n<p>Source Release是Apache关注的重点，也是发布的必须内容；\nBinary Release是可选项，TubeMQ可以选择是否发布二进制包到Apache仓库或者发布到Maven中央仓库。</p>\n<p>请参考以下链接，找到更多关于ASF的发布指南:</p>\n<p><a href=\"https://incubator.apache.org/guides/releasemanagement.html\">Apache Release Guide</a></p>\n<p><a href=\"https://incubator.apache.org/\">Apache incubator 官网</a></p>\n<h2>1. 添加GPG KEY</h2>\n<blockquote>\n<p>本章节主要参考：<a href=\"https://infra.apache.org/openpgp.html\">https://infra.apache.org/openpgp.html</a>\n<strong>该章节仅仅对第一次当该项目的Release Manager需要。</strong></p>\n</blockquote>\n<h3>1.1 安装gpg</h3>\n<p>详细的安装文档可以参考<a href=\"https://www.gnupg.org/download/index.html\">官网</a>, Mac OS环境配置如下</p>\n<pre><code class=\"language-shell\"><span class=\"hljs-meta\">$</span><span class=\"bash\"> brew install gpg</span>\n<span class=\"hljs-meta\">$</span><span class=\"bash\"> gpg --version <span class=\"hljs-comment\">#检查版本，应该为2.x</span></span>\n</code></pre>\n<h3>1.2 生成gpg Key</h3>\n<h4>需要注意以下几点：</h4>\n<ul>\n<li>输入名字时最好与Apache中登记的Full name保持一致</li>\n<li>使用的邮箱应该是apache邮箱</li>\n<li>名字最好使用拼音或者英文，否则会出现乱码</li>\n</ul>\n<h4>根据提示，生成key</h4>\n<pre><code class=\"language-shell\">➜  ~ gpg --full-gen-key\ngpg (GnuPG) 2.2.20; Copyright (C) 2020 Free Software Foundation, Inc.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\nPlease select what kind of key you want:\n   (1) RSA and RSA (default)\n   (2) DSA and Elgamal\n   (3) DSA (sign only)\n   (4) RSA (sign only)\n  (14) Existing key from card\nYour selection? 1 # 这里输入1\nRSA keys may be between 1024 and 4096 bits long.\nWhat keysize do you want? (2048) 4096 # 这里输入4096\nRequested keysize is 4096 bits       \nPlease specify how long the key should be valid.\n         0 = key does not expire\n      &lt;n&gt;  = key expires in n days\n      &lt;n&gt;w = key expires in n weeks\n      &lt;n&gt;m = key expires in n months\n      &lt;n&gt;y = key expires in n years\nKey is valid for? (0) 0 # 这里输入0\nKey does not expire at all\nIs this correct? (y/N) y # 这里输入y\n\nGnuPG needs to construct a user ID to identify your key.\n\nReal name: Guangxu Cheng # 这里输入你的名字\nEmail address: gxcheng@apache.org # 这里输入你的邮箱\nComment:                          # 这里输入一些注释，可以为空\nYou selected this USER-ID:\n    \"Guangxu Cheng &lt;gxcheng@apache.org&gt;\"\n\nChange (N)ame, (C)omment, (E)mail or (O)kay/(Q)uit? O #这里输入O\nWe need to generate a lot of random bytes. It is a good idea to perform\nsome other action (type on the keyboard, move the mouse, utilize the\ndisks) during the prime generation; this gives the random number\ngenerator a better chance to gain enough entropy.\nWe need to generate a lot of random bytes. It is a good idea to perform\nsome other action (type on the keyboard, move the mouse, utilize the\ndisks) during the prime generation; this gives the random number\ngenerator a better chance to gain enough entropy.\n<span class=\"hljs-meta\">\n#</span><span class=\"bash\"> 此时会弹出对话框，要求你为这个gpg输入密钥。</span>\n┌──────────────────────────────────────────────────────┐\n│ Please enter this passphrase                         │\n│                                                      │\n│ Passphrase: _______________________________          │\n│                                                      │\n│       &lt;OK&gt;                              &lt;Cancel&gt;     │\n└──────────────────────────────────────────────────────┘\n<span class=\"hljs-meta\">#</span><span class=\"bash\">输入秘钥完毕后就创建好了。并会输出以下信息</span>\ngpg: key 2DD587E7B10F3B1F marked as ultimately trusted\ngpg: revocation certificate stored as '/Users/cheng/.gnupg/openpgp-revocs.d/41936314E25F402D5F7D73152DD587E7B10F3B1F.rev'\npublic and secret key created and signed.\n\npub   rsa4096 2020-05-19 [SC]\n      41936314E25F402D5F7D73152DD587E7B10F3B1F\nuid                      Guangxu Cheng &lt;gxcheng@apache.org&gt;\nsub   rsa4096 2020-05-19 [E]\n</code></pre>\n<h3>1.3 上传生成的key到公共服务器</h3>\n<pre><code class=\"language-shell\">➜  ~ gpg --list-keys                                                        \n-------------------------------\npub   rsa4096 2020-05-18 [SC]\n      5931F8CFD04B37A325E4465D8C0D31C4149B3A87\nuid           [ultimate] Guangxu Cheng &lt;gxcheng@apache.org&gt;\nsub   rsa4096 2020-05-18 [E]\n<span class=\"hljs-meta\">\n#</span><span class=\"bash\"> 通过key id发送public key到keyserver</span>\n<span class=\"hljs-meta\">$</span><span class=\"bash\"> gpg --keyserver pgpkeys.mit.edu --send-key &lt;key id&gt;</span>\n<span class=\"hljs-meta\">#</span><span class=\"bash\"> 其中，pgpkeys.mit.edu为随意挑选的keyserver，keyserver列表为：https://sks-keyservers.net/status/，为相互之间是自动同步的，选任意一个都可以。</span>\n</code></pre>\n<h3>1.4 查看key是否创建成功</h3>\n<p>通过下面的网址，使用邮箱查询上传成功没，大概需要一分钟才能查到，查询时候把 advance 下边的 show full-key hashes 勾上\n<a href=\"http://keys.gnupg.net\">http://keys.gnupg.net</a></p>\n<p>查询结果如下：</p>\n<h3>1.5 将你的gpg公钥加入KEYS文件</h3>\n<blockquote>\n<p>这个步骤需要使用SVN</p>\n</blockquote>\n<p>DEV分支的svn库是 <a href=\"https://dist.apache.org/repos/dist/dev/incubator/tubemq\">https://dist.apache.org/repos/dist/dev/incubator/tubemq</a></p>\n<p>Release分支的SVN库是 <a href=\"https://dist.apache.org/repos/dist/release/incubator/tubemq\">https://dist.apache.org/repos/dist/release/incubator/tubemq</a></p>\n<h4>1.5.1 在dev分支中添加公钥到KEYS，用于发布RC版本</h4>\n<pre><code class=\"language-shell\">➜  ~ svn co https://dist.apache.org/repos/dist/dev/incubator/tubemq /tmp/tubemq-dist-dev\n<span class=\"hljs-meta\">#</span><span class=\"bash\"> 这个步骤比较慢，会把所有版本都考下来，如果网断了，用svn cleanup删掉锁，重新执行一下，会断点续传</span>\n➜  ~ cd tubemq-dist-dev\n➜  tubemq-dist-dev ~ (gpg --list-sigs YOUR_NAME@apache.org &amp;&amp; gpg --export --armor YOUR_NAME@apache.org) &gt;&gt; KEYS # 追加你生成的KEY到文件KEYS中, 追加后最好检查一下是否正确\n➜  tubemq-dist-dev ~ svn add .\n➜  tubemq-dist-dev ~ svn ci -m \"add gpg key for YOUR_NAME\" # 接下来会要求输入用户名和密码，就用你的apache的用户名和密码。\n</code></pre>\n<h4>1.5.2 在release分支中添加公钥到KEYS，用于发布正式版本</h4>\n<pre><code class=\"language-shell\">➜  ~ svn co https://dist.apache.org/repos/dist/release/incubator/tubemq /tmp/tubemq-dist-release\n➜  ~ cd tubemq-dist-release\n➜  tubemq-dist-release ~ (gpg --list-sigs YOUR_NAME@apache.org &amp;&amp; gpg --export --armor YOUR_NAME@apache.org) &gt;&gt; KEYS\n➜  tubemq-dist-release ~ svn add .\n➜  tubemq-dist-release ~ svn ci -m \"add gpg key for YOUR_NAME\" # 接下来会要求输入用户名和密码，就用你的apache的用户名和密码。\n</code></pre>\n<h3>1.6 上传GPG公钥到Github账户</h3>\n<ol>\n<li>进入 <a href=\"https://github.com/settings/keys\">https://github.com/settings/keys</a> ，添加GPG KEYS。</li>\n<li>如果添加后你发现这个密钥后面写了“未经过验证” (unverified)，记得去将GPG key中用到的邮箱绑定到你的github账户上 (<a href=\"https://github.com/settings/emails\">https://github.com/settings/emails</a>)。</li>\n</ol>\n<h2>2. 设置maven设置</h2>\n<p><strong>如果已经设置过则跳过</strong></p>\n<p>在maven的配置文件~/.m2/settings.xml中，则添加下面的<server>项</p>\n<pre><code class=\"language-xml\"><span class=\"hljs-meta\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">settings</span> <span class=\"hljs-attr\">xsi:schemaLocation</span>=<span class=\"hljs-string\">\"http://maven.apache.org/SETTINGS/1.1.0 http://maven.apache.org/xsd/settings-1.1.0.xsd\"</span> <span class=\"hljs-attr\">xmlns</span>=<span class=\"hljs-string\">\"http://maven.apache.org/SETTINGS/1.1.0\"</span>\n    <span class=\"hljs-attr\">xmlns:xsi</span>=<span class=\"hljs-string\">\"http://www.w3.org/2001/XMLSchema-instance\"</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">servers</span>&gt;</span>\n    <span class=\"hljs-comment\">&lt;!-- Apache Repo Settings --&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">server</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">id</span>&gt;</span>apache.snapshots.https<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">id</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">username</span>&gt;</span>{user-id}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">username</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">password</span>&gt;</span>{user-pass}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">password</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">server</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">server</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">id</span>&gt;</span>apache.releases.https<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">id</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">username</span>&gt;</span>{user-id}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">username</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">password</span>&gt;</span>{user-pass}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">password</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">server</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">servers</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">settings</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">profiles</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">profile</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">id</span>&gt;</span>apache-release<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">id</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">properties</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">gpg.keyname</span>&gt;</span>你的KEYID<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">gpg.keyname</span>&gt;</span><span class=\"hljs-comment\">&lt;!-- Your GPG Keyname here --&gt;</span>\n        <span class=\"hljs-comment\">&lt;!-- Use an agent: Prevents being asked for the password during the build --&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">gpg.useagent</span>&gt;</span>true<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">gpg.useagent</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">gpg.passphrase</span>&gt;</span>你的私钥的密码<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">gpg.passphrase</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">properties</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">profile</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">profiles</span>&gt;</span>\n</code></pre>\n<h2>3. 编译打包</h2>\n<h3>3.1 准备分支</h3>\n<ul>\n<li>从主干分支拉取新分支作为发布分支，release-${release_version}</li>\n<li>更新<code>CHANGES.md</code></li>\n<li>检查代码是否正常，包括编译成功、单元测试全部成功，RAT检查成功等等</li>\n<li>更改版本号</li>\n</ul>\n<h3>3.2 创建tag</h3>\n<blockquote>\n<p>创建tag前，要确保代码已经检查无误，包括：编译成功、单元测试全部成功，RAT检查成功等</p>\n</blockquote>\n<p><strong>创建一个带签名的tag</strong></p>\n<pre><code class=\"language-shell\">git tag -s ${release_version}-${rc_version} -m \"Tagging the ${release_version} first Releae Candidate (Candidates start at zero)\"\n</code></pre>\n<h3>3.3 打包源码</h3>\n<blockquote>\n<p>tag创建成功后，我需要将tag源码打包成一个tar包</p>\n</blockquote>\n<pre><code class=\"language-shell\">mkdir /tmp/apache-tubemq-${release_version}-${rc_version}\ngit archive --format=tar.gz --output=\"/tmp/apache-tubemq-${release_version}-${rc_version}/apache-tubemq-${release_version}-src.tar.gz\" --prefix=\"apache-tubemq-${release_version}/\" $git_tag\n</code></pre>\n<h3>3.4 打包二进制包</h3>\n<blockquote>\n<p>编译上一步打包的源码</p>\n</blockquote>\n<pre><code class=\"language-shell\">cd /tmp/apache-tubemq-${release_version}-${rc_version} # 进入源码包目录\ntar xzvf apache-tubemq-${release_version}-src.tar.gz #解压源码包\ncd apache-tubemq-${release_version} # 进入源码目录\nmvn compile clean install package -DskipTests # 编译\ncp ./tubemq-client/target/apache-tubemq-client-${release_version}-bin.tar.gz /tmp/apache-tubemq-${release_version}-${rc_version}/ # 拷贝client包到源码包目录下，方面下一步对包进行签名\ncp ./tubemq-server/target/apache-tubemq-server-${release_version}-bin.tar.gz /tmp/apache-tubemq-${release_version}-${rc_version}/ # 拷贝server包到源码包目录下，方面下一步对包进行签名\n</code></pre>\n<h3>3.5 对源码包/二进制包进行签名/sha512/md5</h3>\n<pre><code class=\"language-shell\">for i in *.tar.gz; do echo $i; gpg --print-md MD5 $i &gt; $i.md5 ; done # 计算MD5\nfor i in *.tar.gz; do echo $i; gpg --print-md SHA512 $i &gt; $i.sha512 ; done # 计算SHA512\nfor i in *.tar.gz; do echo $i; gpg --armor --output $i.asc --detach-sig $i ; done # 计算签名\n</code></pre>\n<h3>3.6 检查生成的签名/sha512/md5是否正确</h3>\n<p>具体可以参考：<a href=\"how-to-verify.md\">验证候选版本</a>\n比如验证签名是否正确如下：</p>\n<pre><code class=\"language-shell\">for i in *.tar.gz; do echo $i; gpg --verify $i.asc $i ; done\n</code></pre>\n<h2>4. 准备Apache发布</h2>\n<h3>4.1 发布jar包到Apache Nexus仓库</h3>\n<pre><code class=\"language-shell\">cd /tmp/apache-tubemq-${release_version}-${rc_version} # 进入源码包目录\ntar xzvf apache-tubemq-${release_version}-src.tar.gz #解压源码包\ncd apache-tubemq-${release_version}\nmvn -DskipTests deploy -Papache-release -Dmaven.javadoc.skip=true  # 开始上传\n</code></pre>\n<h3>4.2 上传tag到git仓库</h3>\n<pre><code class=\"language-shell\">git push origin ${release_version}-${rc_version}\n</code></pre>\n<h3>4.3 上传编译好的文件到dist</h3>\n<blockquote>\n<p>这个步骤需要使用SVN, DEV分支的svn库是 <a href=\"https://dist.apache.org/repos/dist/dev/incubator/tubemq\">https://dist.apache.org/repos/dist/dev/incubator/tubemq</a></p>\n</blockquote>\n<h3>4.3.1 将TubeMQ checkout到本地目录</h3>\n<pre><code class=\"language-shell\"><span class=\"hljs-meta\">#</span><span class=\"bash\"> 这个步骤可能会比较慢，会把所有版本都考下来，如果网断了，用svn cleanup删掉锁，重新执行一下，会断点续传</span>\nsvn co https://dist.apache.org/repos/dist/dev/incubator/tubemq /tmp/tubemq-dist-dev\n</code></pre>\n<h3>4.3.2 添加public key到KEYS文件并提交到SVN仓库</h3>\n<pre><code class=\"language-shell\">cd /tmp/tubemq-dist-dev\nmkdir ${release_version}-${rc_version} #创建版本目录\n<span class=\"hljs-meta\">#</span><span class=\"bash\"> 将源码包和签名包拷贝到此处</span>\ncp /tmp/apache-tubemq-${release_version}-${rc_version}/*tar.gz* ${release_version}-${rc_version}/\nsvn status # 检查svn状态\nsvn add ${release_version}-${rc_version} # 添加到svn版本\nsvn status # 检查svn状态\nsvn commit -m 'prepare for ${release_version} ${rc_version}'# 提交至svn远程服务器\n</code></pre>\n<h3>4.4 关闭Apache Staging仓库</h3>\n<blockquote>\n<p>请确保所有的artifact都是ok的</p>\n</blockquote>\n<ol>\n<li>登录http://repository.apache.org , 使用Apache账号登录</li>\n<li>点击左侧的Staging repositories，</li>\n<li>搜索TubeMQ关键字，选择你最近上传的仓库</li>\n<li>点击上方的Close按钮，这个过程会进行一系列检查</li>\n<li>检查通过以后, 在下方的Summary标签页上出现一个连接，请保存好这个链接，需要放在接下来的投票邮件当中。\n链接应该是类似这样的: <code>https://repository.apache.org/content/repositories/orgapachetubemq-xxxx</code></li>\n</ol>\n<p>WARN: 请注意点击Close可能会出现失败，请检查失败原因并处理</p>\n<h2>5. 进入投票</h2>\n<blockquote>\n<p>TubeMQ仍旧在孵化中，需要进行两次投票，</p>\n</blockquote>\n<ul>\n<li>TubeMQ社区投票，发邮件至：<code>dev@tubemq.apache.org</code></li>\n<li>incubator社区投票，发邮件至：<code>general@incubator.apache.org</code>\nTubeMQ毕业之后，只需要在TubeMQ社区投票</li>\n</ul>\n<h3>5.1 TubeMQ社区投票</h3>\n<h4>5.1.1 投票模板</h4>\n<pre><code class=\"language-html\">标题：[VOTE] Release Apache TubeMQ ${release_version} ${rc_version}\n\n内容：\n\nHello Apache TubeMQ PPMC and Community,\n\n    This is a call for vote to release Apache TubeMQ version ${release_version}-${rc_version}.\n\n    The tag to be voted on is ${release_version}-${rc_version}:\n\n    https://github.com/apache/incubator-tubemq/tree/${release_version}-${rc_version}\n\n    The release tarball, signature, and checksums can be found at:\n\n    https://dist.apache.org/repos/dist/dev/incubator/tubemq/${release_version}-${rc_version}/\n\n    Maven artifacts are available in a staging repository at:\n\n    https://repository.apache.org/content/repositories/orgapachetubemq-{staging-id}\n\n    Artifacts were signed with the {YOUR_PUB_KEY} key which can be found in:\n\n    https://dist.apache.org/repos/dist/dev/incubator/tubemq/KEYS\n\n    ${release_version} includes ~ ${issue_count} bug and improvement fixes done since last versions which can be found at:\n\n    https://github.com/apache/incubator-tubemq/blob/${release_version}-${rc_version}/CHANGES.md\n\n    Please download, verify, and test.\n\n    The VOTE will remain open for at least 72 hours.\n\n    [ ] +1 Release this package as Apache TubeMQ 0.3.0-incubating\n    [ ] +0\n    [ ] -1 Do not release this package because...\n\n    To learn more about apache tubemq, please see\n    http://tubemq.apache.org/\n\n    Checklist for reference:\n\n      [ ] Download links are valid.\n      [ ] Checksums and signatures.\n      [ ] LICENSE/NOTICE/DISCLAIMER-WIP files exist\n      [ ] No unexpected binary files\n      [ ] All source files have ASF headers\n      [ ] Can compile from source\n      [ ] All Tests Passed\n\n      More detail checklist  please refer:\n      https://cwiki.apache.org/confluence/display/INCUBATOR/Incubator+Release+Checklist\n\nThanks,\nYour TubeMQ Release Manager\n</code></pre>\n<h4>5.1.2 宣布投票结果模板</h4>\n<pre><code class=\"language-html\">标题：[RESULT][VOTE] Release Apache TubeMQ ${release_version} ${rc_version}\n\n内容：\n\nHello Apache TubeMQ PPMC and Community,\n\n    The vote closes now as 72hr have passed. The vote PASSES with\n    xx (+1 non-binding) votes from the PPMC,\n    xx (+1 binding) vote from the IPMC,\n    xx (+1 non-binding) vote from the rest of the developer community,\n    and no further 0 or -1 votes.\n\n    The vote thread: {vote_mail_address}\n\n    I will now bring the vote to general@incubator.apache.org to get approval by the IPMC.\n    If this vote passes also, the release is accepted and will be published.\n\nThank you for your support.\nYour TubeMQ Release Manager\n</code></pre>\n<h3>5.2 incubator社区投票</h3>\n<h4>5.2.1 投票模板</h4>\n<pre><code class=\"language-html\">标题：[VOTE] Release Apache TubeMQ (Incubating) ${release_version} ${rc_version}\n\n内容：\n\nHello Incubator Community,\n\n    This is a call for a vote to release Apache TubeMQ (Incubating) version\n    ${release_version} ${rc_version}\n\n    The Apache TubeMQ community has voted on and approved a proposal to release\n    Apache TubeMQ (Incubating) version ${release_version} ${rc_version}\n\n    We now kindly request the Incubator PMC members review and vote on this\n    incubator release.\n\n    TubeMQ community vote thread:\n    • [投票链接]\n\n    Vote result thread:\n    • [投票结果链接]\n\n    The release candidate:\n    • https://dist.apache.org/repos/dist/dev/incubator/tubemq/${release_version}-${rc_version}/\n\n    Git tag for the release:\n    • https://github.com/apache/incubator-tubemq/tree/${release_version}-${rc_version}\n\n    Release notes:\n    • https://github.com/apache/incubator-tubemq/releases/tag/${release_version}\n\n    The artifacts signed with PGP key [填写你个人的KEY], corresponding to [填写你个人的邮箱], that can be found in keys file:\n    • https://dist.apache.org/repos/dist/dev/incubator/tubemq/KEYS\n\n    The vote will be open for at least 72 hours or until necessary number of votes are reached.\n\n    Please vote accordingly:\n\n    [ ] +1 approve\n    [ ] +0 no opinion\n    [ ] -1 disapprove with the reason\n\nThanks,\nOn behalf of Apache TubeMQ (Incubating) community\n\n</code></pre>\n<h4>5.2.2 宣布投票结果模板</h4>\n<pre><code class=\"language-html\">标题：[RESULT][VOTE] Release Apache TubeMQ ${release_version} {rc_version}\n\n内容：\nHi all\n\nThanks for reviewing and voting for Apache TubeMQ (Incubating) ${release_version} {rc_version}\nrelease, I am happy to announce the release voting has passed with [投票结果数]\nbinding votes, no +0 or -1 votes. Binding votes are from IPMC\n\n   - xxx\n   - xxx\n   - xxx\n\nThe voting thread is:\n[投票链接]\n\nMany thanks for all our mentors helping us with the release procedure, and\nall IPMC helped us to review and vote for Apache TubeMQ (Incubating) release. I will\nbe working on publishing the artifacts soon.\n\nThanks\nOn behalf of Apache TubeMQ (Incubating) community\n</code></pre>\n<h2>6. 正式发布</h2>\n<h3>6.1 合并release-${release_version}分支的改动到master分支</h3>\n<h3>6.2 将源码和二进制包从svn的dev目录移动到release目录</h3>\n<pre><code class=\"language-shell\">svn mv https://dist.apache.org/repos/dist/dev/incubator/tubemq/${release_version}-${rc_version} https://dist.apache.org/repos/dist/release/incubator/tubemq/${release_version}\n</code></pre>\n<h3>6.3 确认dev和release下的包是否正确</h3>\n<ol>\n<li>确认<a href=\"https://dist.apache.org/repos/dist/dev/incubator/tubemq/\">dev</a>下的<code>${release_version}-${rc_version}</code>已被删除</li>\n<li>删除<a href=\"https://dist.apache.org/repos/dist/release/incubator/tubemq/\">release</a>目录下上一个版本的发布包，这些包会被自动保存在<a href=\"https://archive.apache.org/dist/incubator/tubemq/\">这里</a></li>\n</ol>\n<h3>6.4 在Apache Staging仓库发布版本</h3>\n<blockquote>\n<p>请确保所有的artifact都是ok的</p>\n</blockquote>\n<ol>\n<li>登录http://repository.apache.org , 使用Apache账号登录</li>\n<li>点击左侧的Staging repositories，</li>\n<li>搜索TubeMQ关键字，选择你最近上传的仓库，投票邮件中指定的仓库</li>\n<li>点击上方的<code>Release</code>按钮，这个过程会进行一系列检查</li>\n</ol>\n<p><strong>等仓库同步到其他数据源，一般需要24小时</strong></p>\n<h3>6.5 更新官网链接</h3>\n<h3>6.6. 发邮件到 <code>dev@tubemq.apache.org</code> 和 <code>general@incubator.apache.org</code></h3>\n<p><strong>请确保6.4中的仓库已发布成功，一般是在6.4后的24小时后发布邮件</strong></p>\n<p>宣布release邮件模板：</p>\n<pre><code class=\"language-html\">标题： [ANNOUNCE] Release Apache TubeMQ(incubating) ${release_version}\n内容：\nHi all,\n\nThe Apache TubeMQ(incubating) community is pleased to announce \nthat Apache TubeMQ (incubating) ${release_version} has been released!\n\nApache TubeMQ is a trillion-records-scale distributed messaging queue (MQ) system, \nfocuses on data transmission and storage under massive data. \n\nDownload Links: xxx\n\nRelease Notes: xxx\n\nWebsite: https://tubemq.apache.org/\n\nTubeMQ Resources:\n- Issue: https://issues.apache.org/jira/projects/TUBEMQ/issues\n- Mailing list: dev@tubemq.apache.org\n\nThanks\nOn behalf of Apache TubeMQ (Incubating) community\n</code></pre>\n",
  "link": "/zh-cn/docs/development/how-to-release.html",
  "meta": {}
}